// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3824.AlphaBot2018;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.Sendable;
import edu.wpi.first.wpilibj.SendableBase;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController drivetrainSpeedR1;
    public static SpeedController drivetrainSpeedR2;
    public static SpeedControllerGroup drivetrainRightDrive;
    public static SpeedController drivetrainSpeedL1;
    public static SpeedController drivetrainSpeedL2;
    public static SpeedControllerGroup drivetrainLeftDrive;
    public static DifferentialDrive drivetrainDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainSpeedR1 = new PWMVictorSPX(0);
        LiveWindow.addActuator("drivetrain", "SpeedR1", (PWMVictorSPX) drivetrainSpeedR1);
        drivetrainSpeedR1.setInverted(false);
        drivetrainSpeedR2 = new PWMVictorSPX(1);
        LiveWindow.addActuator("drivetrain", "SpeedR2", (PWMVictorSPX) drivetrainSpeedR2);
        drivetrainSpeedR2.setInverted(false);
        drivetrainRightDrive = new SpeedControllerGroup(drivetrainSpeedR1, drivetrainSpeedR2  );
        LiveWindow.addActuator("drivetrain", "RightDrive", drivetrainRightDrive);
        
        drivetrainSpeedL1 = new PWMVictorSPX(2);
        LiveWindow.addActuator("drivetrain", "SpeedL1", (PWMVictorSPX) drivetrainSpeedL1);
        drivetrainSpeedL1.setInverted(false);
        drivetrainSpeedL2 = new PWMVictorSPX(3);
        LiveWindow.addActuator("drivetrain", "SpeedL2", (PWMVictorSPX) drivetrainSpeedL2);
        drivetrainSpeedL2.setInverted(false);
        drivetrainLeftDrive = new SpeedControllerGroup(drivetrainSpeedL1, drivetrainSpeedL2  );
        LiveWindow.addActuator("drivetrain", "LeftDrive", drivetrainLeftDrive);
        
        drivetrainDrive = new DifferentialDrive(drivetrainLeftDrive, drivetrainRightDrive);
        LiveWindow.addActuator("drivetrain", "Drive", drivetrainDrive);
        drivetrainDrive.setSafetyEnabled(true);
        drivetrainDrive.setExpiration(0.1);
        drivetrainDrive.setMaxOutput(1.0);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
